<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGgAAAA9CAYAAABBXyzlAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAA5RJREFUeF7tmmF56kAQRZGABRygAQe1gAMUoAAFGMBABSAABWhAQ953eO/yls0C
        m5BkJ8n8OF9pmqTp3J25s5Mubrdb5djFBTKOC2QcF8g4LpBxXCDjjEqg1WpVLRaL6nw+37/f7/f37/ka
        nzsVRiXQ8Xisfn5+qu12+zi2Xq+fzpkaoxIIYcie5XJZXa/X6vf3t9rtdslzp8KoBCJ7+LrZbO7ZRGk7
        nU6186bEaAQic5QtKnUIRSbF506J0QhEtiAMnxGFMjd1/4FRCHS5XO7dGl2cjuFHU/cfGJUHzREXKAPK
        a6m9lgv0BkorPldyM+wCvQBx8DkaErpFF+gfBIIV+y1sYlP3b4MLFMCK1cytaRvNteyPXKCeYVOqTGga
        GLXkLlDPHA6Hh0hNg00GukADQGAQSMPR1DlD4AK9QCMdRNKgtAR4YfiKY0hMCwSUKpU6yl7qnL5glKSG
        BRBq6PGSeYGA8qIg6W3qXKgJpLoPMtowQKVqsZ6LVVzSj4amJhB/PIGIywmBIUjhsSEJ/aiUH5SgJpD2
        IPEq5Zjex5Qi9KOpv0kVNYHInHgHTzAICpvA8HgJMGmehWyy8Dx9UxNIo5KY8GVZitC7XtHV5pEFxP3i
        hTRFagKxMuNSRvAt1X0yR36UK3q4UIYm9Ty5PAkk/4lLB8dK+08Mi6bk5nUongTCf+JSJmP+1NoOWeJo
        9cmgObTbTwJR0+O6LlO2EgwtmK7Ets5DoHAzqnKmYIAFD2KRkOFz+G8eUWsSLIPnWO/c2JJ06Y2jEYis
        xne+ncWRhVSEnPtQVXKnJ9yXKsO9c6/JYRQCEcxU+983TQRCHJ6zyTU5jEIgyloXZUM+m+unbYI9O4H0
        TqarLhKxczPRBfpAHy0193s1w1OGvYNzUteK2QhExuA7nwKSghKWug6hP80UQ9oEezYCfdNSI0JKII41
        8TIX6AWMnMieNq8T8BdKUer/FwgcAeScnLLZJtjyzNTP2mBOIA1svyUlgMZWuZOIJgIhOhmv349IXWSS
        OYEoQfojv6HLxqIkZj3I+YtJgSgXbTamXId3lZg69MVoMoiSlSplqvN6y0p7Lh/ranNbEnMCYcwEN2eY
        GULXFpoyhj0FHzKZQWRC6vg74o6Lzy5QD5A5Kf/5VOI8gwaCQGszmfr5KxBWm1t9dg/qAU0R2nRh2oi2
        vd4iJj3I+Y8LZBwXyDgukHFcIOO4QMZxgUxzq/4A5ssMtR3Fv68AAAAASUVORK5CYII=
</value>
  </data>
</root>